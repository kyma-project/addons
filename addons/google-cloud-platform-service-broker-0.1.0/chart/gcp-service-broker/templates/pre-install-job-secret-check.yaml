apiVersion: batch/v1
kind: Job
metadata:
    name: {{ template "gcp-service-broker.fullname" . }}
    labels:
        app: {{ template "gcp-service-broker.fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    annotations:
        "helm.sh/hook": pre-install,pre-upgrade
        "helm.sh/hook-weight": "5"
        "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
    backoffLimit: 0
    template:
        metadata:
            annotations:
                 sidecar.istio.io/inject: "false"
        spec:
            serviceAccountName: {{ template "gcp-service-broker.fullname" . }}
            restartPolicy: Never
            containers:
                - name: broker-checker
                  image: "{{ .Values.jobs.kubectlImage.repository }}:{{ .Values.jobs.kubectlImage.tag }}"
                  imagePullPolicy: {{ .Values.jobs.kubectlImage.pullPolicy }}
                  command: ["/bin/sh","-c"]
                  args:
                    - |
                      EXPECTED_SECRET_NAME={{ .Values.secretName }}
                      SECRET_NAME=$(kubectl get secret -n {{ .Release.Namespace }} {{ .Values.secretName }} -o jsonpath="{.metadata.name}")
                      if [[ "$SECRET_NAME" == "$EXPECTED_SECRET_NAME" ]] ;
                        then
                          echo "Success! Secret is present.";
                        else
                          echo "Failure! Secret '$EXPECTED_SECRET_NAME' is not present";
                          exit 1;
                      fi

